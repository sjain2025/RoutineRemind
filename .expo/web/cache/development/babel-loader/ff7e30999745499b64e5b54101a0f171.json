{"ast":null,"code":"import View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport React from 'react';\nimport { Controller } from 'react-hook-form';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar CustomInput = function CustomInput(_ref) {\n  var control = _ref.control,\n      name = _ref.name,\n      _ref$rules = _ref.rules,\n      rules = _ref$rules === void 0 ? {} : _ref$rules,\n      placeholder = _ref.placeholder,\n      secureTextEntry = _ref.secureTextEntry;\n  return _jsx(Controller, {\n    control: control,\n    name: name,\n    rules: rules,\n    render: function render(_ref2) {\n      var _ref2$field = _ref2.field,\n          value = _ref2$field.value,\n          onChange = _ref2$field.onChange,\n          onBlur = _ref2$field.onBlur,\n          error = _ref2.fieldState.error;\n      return _jsxs(_Fragment, {\n        children: [_jsx(View, {\n          style: [styles.container, {\n            borderColor: error ? 'red' : 'black'\n          }],\n          children: _jsx(TextInput, {\n            value: value,\n            onChangeText: onChange,\n            onBlur: onBlur,\n            placeholder: placeholder,\n            style: styles.input,\n            secureTextEntry: secureTextEntry\n          })\n        }), error && _jsx(Text, {\n          style: {\n            color: '#f75745',\n            alignSelf: 'stretch',\n            marginLeft: '2.5%'\n          },\n          children: error.message || 'Error'\n        })]\n      });\n    }\n  });\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    backgroundColor: 'white',\n    width: '95%',\n    minHeight: 10,\n    borderWidth: 2,\n    borderRadius: 5,\n    paddingVertical: 15,\n    paddingHorizontal: 10,\n    marginVertical: 5\n  },\n  input: {\n    fontSize: 18\n  }\n});\nexport default CustomInput;","map":{"version":3,"names":["React","Controller","CustomInput","control","name","rules","placeholder","secureTextEntry","field","value","onChange","onBlur","error","fieldState","styles","container","borderColor","input","color","alignSelf","marginLeft","message","StyleSheet","create","backgroundColor","width","minHeight","borderWidth","borderRadius","paddingVertical","paddingHorizontal","marginVertical","fontSize"],"sources":["/Users/sandeepjain/Routine-Remind/components/CustomInput/CustomInput.js"],"sourcesContent":["import { View, Text, TextInput, StyleSheet } from 'react-native';\r\nimport React from 'react';\r\nimport { Controller } from 'react-hook-form';\r\n\r\nconst CustomInput = ({control, name, rules = {}, placeholder, secureTextEntry}) => {\r\n  return (\r\n      <Controller \r\n          control={control}\r\n          name={name}\r\n          rules={rules}\r\n          render={({field: {value, onChange, onBlur}, fieldState: {error}}) => (\r\n            <>\r\n              <View style={[styles.container, {borderColor: error ? 'red' : 'black'},]}>\r\n                <TextInput\r\n                  value={value}\r\n                  onChangeText={onChange}\r\n                  onBlur={onBlur}\r\n                  placeholder={placeholder}\r\n                  style={styles.input}\r\n                  secureTextEntry={secureTextEntry}\r\n                />\r\n              </View>\r\n              {error && (\r\n                <Text style={{color: '#f75745', alignSelf: 'stretch', marginLeft: '2.5%'}}>{error.message || 'Error'}</Text>\r\n              )}\r\n            </>\r\n          )}\r\n      />\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    backgroundColor: 'white',\r\n    width: '95%',\r\n    minHeight: 10,\r\n    borderWidth: 2,\r\n    borderRadius: 5,\r\n    paddingVertical: 15,\r\n    paddingHorizontal: 10,\r\n    marginVertical: 5,\r\n  },\r\n  input: {\r\n    fontSize: 18,\r\n  },\r\n});\r\n\r\nexport default CustomInput;"],"mappings":";;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,iBAA3B;;;;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAA+D;EAAA,IAA7DC,OAA6D,QAA7DA,OAA6D;EAAA,IAApDC,IAAoD,QAApDA,IAAoD;EAAA,sBAA9CC,KAA8C;EAAA,IAA9CA,KAA8C,2BAAtC,EAAsC;EAAA,IAAlCC,WAAkC,QAAlCA,WAAkC;EAAA,IAArBC,eAAqB,QAArBA,eAAqB;EACjF,OACI,KAAC,UAAD;IACI,OAAO,EAAEJ,OADb;IAEI,IAAI,EAAEC,IAFV;IAGI,KAAK,EAAEC,KAHX;IAII,MAAM,EAAE;MAAA,wBAAEG,KAAF;MAAA,IAAUC,KAAV,eAAUA,KAAV;MAAA,IAAiBC,QAAjB,eAAiBA,QAAjB;MAAA,IAA2BC,MAA3B,eAA2BA,MAA3B;MAAA,IAAiDC,KAAjD,SAAoCC,UAApC,CAAiDD,KAAjD;MAAA,OACN;QAAA,WACE,KAAC,IAAD;UAAM,KAAK,EAAE,CAACE,MAAM,CAACC,SAAR,EAAmB;YAACC,WAAW,EAAEJ,KAAK,GAAG,KAAH,GAAW;UAA9B,CAAnB,CAAb;UAAA,UACE,KAAC,SAAD;YACE,KAAK,EAAEH,KADT;YAEE,YAAY,EAAEC,QAFhB;YAGE,MAAM,EAAEC,MAHV;YAIE,WAAW,EAAEL,WAJf;YAKE,KAAK,EAAEQ,MAAM,CAACG,KALhB;YAME,eAAe,EAAEV;UANnB;QADF,EADF,EAWGK,KAAK,IACJ,KAAC,IAAD;UAAM,KAAK,EAAE;YAACM,KAAK,EAAE,SAAR;YAAmBC,SAAS,EAAE,SAA9B;YAAyCC,UAAU,EAAE;UAArD,CAAb;UAAA,UAA4ER,KAAK,CAACS,OAAN,IAAiB;QAA7F,EAZJ;MAAA,EADM;IAAA;EAJZ,EADJ;AAwBD,CAzBD;;AA2BA,IAAMP,MAAM,GAAGQ,UAAU,CAACC,MAAX,CAAkB;EAC/BR,SAAS,EAAE;IACTS,eAAe,EAAE,OADR;IAETC,KAAK,EAAE,KAFE;IAGTC,SAAS,EAAE,EAHF;IAITC,WAAW,EAAE,CAJJ;IAKTC,YAAY,EAAE,CALL;IAMTC,eAAe,EAAE,EANR;IAOTC,iBAAiB,EAAE,EAPV;IAQTC,cAAc,EAAE;EARP,CADoB;EAW/Bd,KAAK,EAAE;IACLe,QAAQ,EAAE;EADL;AAXwB,CAAlB,CAAf;AAgBA,eAAe9B,WAAf"},"metadata":{},"sourceType":"module"}