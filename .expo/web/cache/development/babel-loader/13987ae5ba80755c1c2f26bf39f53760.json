{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport Logo from \"../../assets/images/PersonIcon.png\";\nimport CustomButton from \"../../components/CustomButton/CustomButton\";\nimport { useNavigation } from '@react-navigation/native';\nimport MicRecorder from \"mic-recorder-to-mp3\";\nimport { Oval } from \"react-loader-spinner\";\nimport axios from \"axios\";\nimport Audio1 from \"../../assets/images/audio1.png\";\nimport useSpeechToText, { ResultType } from \"./Hooks\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar StudentScreen = function StudentScreen() {\n  var navigation = useNavigation();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentDate = _useState2[0],\n      setCurrentDate = _useState2[1];\n\n  var text = \"\";\n  useEffect(function () {\n    var date = new Date().getDate();\n    var month = new Date().getMonth() + 1;\n    var year = new Date().getFullYear();\n    setCurrentDate(month + '/' + date + '/' + year);\n    return function () {};\n  }, []);\n\n  var setText = function setText(words) {\n    text = words;\n    console.log(text);\n  };\n\n  var handleBack = function handleBack() {\n    navigation.navigate('ChooseUser');\n  };\n\n  var _useSpeechToText = useSpeechToText({\n    continuous: true,\n    crossBrowser: true,\n    timeout: 3000,\n    googleApiKey: process.env.REACT_APP_API_KEY,\n    speechRecognitionProperties: {\n      interimResults: true\n    },\n    useLegacyResults: false\n  }),\n      error = _useSpeechToText.error,\n      interimResult = _useSpeechToText.interimResult,\n      isRecording = _useSpeechToText.isRecording,\n      results = _useSpeechToText.results,\n      startSpeechToText = _useSpeechToText.startSpeechToText,\n      stopSpeechToText = _useSpeechToText.stopSpeechToText;\n\n  var handleSubmit = function handleSubmit(error) {\n    navigation.navigate('QuestionScreen');\n  };\n\n  return _jsxs(View, {\n    style: styles.root,\n    children: [_jsx(\"br\", {}), _jsx(Text, {\n      style: styles.title,\n      children: \"Child Profile\"\n    }), _jsx(\"br\", {}), _jsx(\"img\", {\n      width: \"145\",\n      height: \"135\",\n      src: Logo\n    }), _jsxs(Text, {\n      style: styles.text,\n      children: [\"Today's Date: \", currentDate]\n    }), _jsx(\"img\", {\n      width: \"315\",\n      height: \"280\",\n      src: Audio1,\n      onClick: isRecording ? stopSpeechToText : startSpeechToText\n    }), results.map(function (result) {\n      return setText(result.transcript);\n    }), _jsxs(\"ul\", {\n      style: {\n        color: \"white\",\n        listStyle: \"none\",\n        fontFamily: \"sans-serif\",\n        fontWeight: \"bold\",\n        fontSize: \"18px\"\n      },\n      children: [results.map(function (result) {\n        return _jsx(\"li\", {\n          children: result.transcript\n        }, result.timestamp);\n      }), interimResult && _jsx(\"li\", {\n        children: interimResult\n      })]\n    }), _jsx(CustomButton, {\n      text: \"Submit\",\n      onPress: handleSubmit,\n      type: \"EXTRATWO\"\n    }), _jsx(\"br\", {}), _jsx(CustomButton, {\n      text: \"Go Back\",\n      onPress: handleBack,\n      type: \"SECONDARY\"\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#364d59',\n    height: '140%'\n  },\n  title: {\n    fontSize: 36,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  text: {\n    marginTop: \"10px\",\n    fontSize: 20,\n    color: 'white'\n  },\n  text2: {\n    marginTop: \"10px\",\n    fontSize: 20,\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});\nexport default StudentScreen;","map":{"version":3,"names":["React","useState","useEffect","useRef","Logo","CustomButton","useNavigation","MicRecorder","Oval","axios","Audio1","useSpeechToText","ResultType","StudentScreen","navigation","currentDate","setCurrentDate","text","date","Date","getDate","month","getMonth","year","getFullYear","setText","words","console","log","handleBack","navigate","continuous","crossBrowser","timeout","googleApiKey","process","env","REACT_APP_API_KEY","speechRecognitionProperties","interimResults","useLegacyResults","error","interimResult","isRecording","results","startSpeechToText","stopSpeechToText","handleSubmit","styles","root","title","map","result","transcript","color","listStyle","fontFamily","fontWeight","fontSize","timestamp","StyleSheet","create","alignItems","padding","backgroundColor","height","marginTop","text2"],"sources":["/Users/sandeepjain/RoutineRemind/screens/StudentScreen/StudentScreen.js"],"sourcesContent":["import React, {useState, useEffect, useRef} from 'react';\r\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\r\nimport Logo from '../../assets/images/PersonIcon.png';\r\nimport CustomButton from '../../components/CustomButton/CustomButton';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport MicRecorder from \"mic-recorder-to-mp3\"\r\nimport { Oval } from \"react-loader-spinner\"\r\nimport axios from \"axios\"\r\nimport Audio1 from '../../assets/images/audio1.png';\r\nimport useSpeechToText, { ResultType } from './Hooks';\r\n\r\nconst StudentScreen = () => {\r\n  const navigation = useNavigation()\r\n  const [currentDate, setCurrentDate] = useState('')\r\n  let text = \"\"\r\n\r\n  useEffect(() => {\r\n    var date = new Date().getDate()\r\n    var month = new Date().getMonth() + 1\r\n    var year = new Date().getFullYear()\r\n    setCurrentDate(\r\n      month + '/' + date + '/' + year\r\n    )\r\n    return () => {}\r\n  }, [])\r\n\r\n  const setText = (words) => {\r\n    text = words\r\n    console.log(text);\r\n  }\r\n\r\n  const handleBack = () => {\r\n    navigation.navigate('ChooseUser')\r\n  }\r\n\r\n  const {\r\n    error,\r\n    interimResult,\r\n    isRecording,\r\n    results,\r\n    startSpeechToText,\r\n    stopSpeechToText\r\n  } = useSpeechToText({\r\n    continuous: true,\r\n    crossBrowser: true,\r\n    timeout: 3000,\r\n    googleApiKey: process.env.REACT_APP_API_KEY,\r\n    speechRecognitionProperties: { interimResults: true },\r\n    useLegacyResults: false\r\n  });\r\n\r\n  const handleSubmit = (error) => {\r\n    navigation.navigate('QuestionScreen')\r\n  }\r\n\r\n  return (\r\n    <View style={styles.root}>\r\n      <br/>\r\n      <Text style={styles.title}>Child Profile</Text>\r\n      <br/>\r\n      <img width=\"145\" height=\"135\" src={Logo} /> \r\n      <Text style={styles.text}>Today's Date: {currentDate}</Text>\r\n      <img width=\"315\" height=\"280\" src={Audio1} onClick={isRecording ? stopSpeechToText : startSpeechToText} />\r\n      {(results).map((result) => (\r\n          setText(result.transcript)\r\n      ))}\r\n      <ul style={{color: \"white\", listStyle: \"none\", fontFamily: \"sans-serif\", fontWeight: \"bold\", fontSize: \"18px\"}}>\r\n          {(results).map((result) => (\r\n            <li key={result.timestamp}>{result.transcript}</li>\r\n          ))}\r\n          {interimResult && <li>{interimResult}</li>}\r\n      </ul>\r\n      <CustomButton text={\"Submit\"} onPress={handleSubmit} type=\"EXTRATWO\"/>\r\n      <br/>\r\n      <CustomButton text={\"Go Back\"} onPress={handleBack} type=\"SECONDARY\"/>\r\n    </View>\r\n  );\r\n}\r\n  \r\n\r\nconst styles = StyleSheet.create({\r\n  root: {\r\n    alignItems: 'center',\r\n    padding: 20,\r\n    backgroundColor: '#364d59',\r\n    height: '140%',\r\n  },\r\n  title: {\r\n    fontSize: 36,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n  },\r\n  text: {\r\n    marginTop: \"10px\",\r\n    fontSize: 20,\r\n    color: 'white',\r\n  },\r\n  text2: {\r\n    marginTop: \"10px\",\r\n    fontSize: 20,\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default StudentScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module"}