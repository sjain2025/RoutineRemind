{"ast":null,"code":"import React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport useWindowDimensions from \"react-native-web/dist/exports/useWindowDimensions\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport CustomInput from \"../../components/CustomInput/CustomInput\";\nimport CustomButton from \"../../components/CustomButton/CustomButton\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useForm, Controller } from 'react-hook-form';\nimport Audio1 from \"../../assets/images/audio1.png\";\nimport Plus from \"../../assets/images/plus.png\";\nimport Minus from \"../../assets/images/minus.png\";\nimport useSpeechToText, { ResultType } from \"../StudentScreen/Hooks\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar TodayScheduleScreen = function TodayScheduleScreen() {\n  var navigation = useNavigation();\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      watch = _useForm.watch;\n\n  var keyword = watch('keyword');\n\n  var handleBack = function handleBack() {\n    navigation.navigate('ParentScreen');\n  };\n\n  var handlePlus = function handlePlus() {\n    navigation.navigate('TodayScheduleScreenTwo');\n  };\n\n  var _useSpeechToText = useSpeechToText({\n    continuous: true,\n    crossBrowser: true,\n    timeout: 3000,\n    googleApiKey: process.env.REACT_APP_API_KEY,\n    speechRecognitionProperties: {\n      interimResults: true\n    },\n    useLegacyResults: false\n  }),\n      error = _useSpeechToText.error,\n      interimResult = _useSpeechToText.interimResult,\n      isRecording = _useSpeechToText.isRecording,\n      results = _useSpeechToText.results,\n      startSpeechToText = _useSpeechToText.startSpeechToText,\n      stopSpeechToText = _useSpeechToText.stopSpeechToText;\n\n  return _jsxs(View, {\n    style: styles.root,\n    children: [_jsx(\"br\", {}), _jsx(Text, {\n      style: styles.title,\n      children: \"Today's Schedule\"\n    }), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsxs(\"div\", {\n      style: {\n        display: \"inline\",\n        width: \"100%\"\n      },\n      children: [_jsx(Text, {\n        style: styles.text,\n        children: \"Action Item 1\"\n      }), _jsx(\"input\", {\n        placeholder: \"Keyword\",\n        style: {\n          height: 35,\n          marginLeft: 18,\n          fontSize: 18,\n          width: 175,\n          marginTop: 24\n        }\n      }), _jsx(\"img\", {\n        width: \"100\",\n        height: \"90\",\n        style: {},\n        src: Audio1,\n        onClick: isRecording ? stopSpeechToText : startSpeechToText\n      }), _jsxs(\"ul\", {\n        style: {\n          color: \"white\",\n          listStyle: \"none\",\n          fontFamily: \"sans-serif\",\n          fontWeight: \"bold\",\n          fontSize: \"18px\"\n        },\n        children: [results.map(function (result) {\n          return _jsx(\"li\", {\n            children: result.transcript\n          }, result.timestamp);\n        }), interimResult && _jsx(\"li\", {\n          children: interimResult\n        })]\n      })]\n    }), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsxs(\"div\", {\n      children: [_jsx(\"img\", {\n        width: \"95\",\n        height: \"90\",\n        src: Minus\n      }), _jsx(Text, {\n        children: \"       \"\n      }), _jsx(\"img\", {\n        width: \"95\",\n        height: \"90\",\n        src: Plus,\n        onClick: handlePlus\n      })]\n    }), _jsx(\"br\", {}), _jsx(CustomButton, {\n      text: \"Save\",\n      onPress: handleBack,\n      type: \"EXTRATWO\"\n    }), _jsx(\"br\", {}), _jsx(CustomButton, {\n      text: \"Go Back\",\n      onPress: handleBack,\n      type: \"SECONDARY\"\n    }), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {})]\n  });\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#364d59',\n    height: \"max\"\n  },\n  title: {\n    fontSize: 36,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  text: {\n    fontSize: 20,\n    color: 'white'\n  },\n  text2: {\n    marginTop: \"10px\",\n    fontSize: 20,\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});\nexport default TodayScheduleScreen;","map":{"version":3,"names":["React","useState","useEffect","CustomInput","CustomButton","useNavigation","useForm","Controller","Audio1","Plus","Minus","useSpeechToText","ResultType","TodayScheduleScreen","navigation","control","watch","keyword","handleBack","navigate","handlePlus","continuous","crossBrowser","timeout","googleApiKey","process","env","REACT_APP_API_KEY","speechRecognitionProperties","interimResults","useLegacyResults","error","interimResult","isRecording","results","startSpeechToText","stopSpeechToText","styles","root","title","display","width","text","height","marginLeft","fontSize","marginTop","color","listStyle","fontFamily","fontWeight","map","result","transcript","timestamp","StyleSheet","create","alignItems","padding","backgroundColor","text2"],"sources":["/Users/sandeepjain/Routine-Remind/screens/TodayScheduleScreen/TodayScheduleScreen.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { View, Text, Image, StyleSheet, useWindowDimensions, ScrollView, TextInput } from 'react-native';\r\nimport CustomInput from '../../components/CustomInput/CustomInput';\r\nimport CustomButton from '../../components/CustomButton/CustomButton';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport {useForm, Controller} from 'react-hook-form';\r\nimport Audio1 from '../../assets/images/audio1.png';\r\nimport Plus from '../../assets/images/plus.png';\r\nimport Minus from '../../assets/images/minus.png';\r\nimport useSpeechToText, { ResultType } from '../StudentScreen/Hooks';\r\n\r\nconst TodayScheduleScreen = () => {\r\n  const navigation = useNavigation();\r\n  const {control, watch} = useForm();\r\n  const keyword = watch('keyword');\r\n\r\n  const handleBack = () => {\r\n    navigation.navigate('ParentScreen')\r\n  }\r\n\r\n  const handlePlus = () => {\r\n    navigation.navigate('TodayScheduleScreenTwo')\r\n  }\r\n\r\n  const {\r\n    error,\r\n    interimResult,\r\n    isRecording,\r\n    results,\r\n    startSpeechToText,\r\n    stopSpeechToText\r\n  } = useSpeechToText({\r\n    continuous: true,\r\n    crossBrowser: true,\r\n    timeout: 3000,\r\n    googleApiKey: process.env.REACT_APP_API_KEY,\r\n    speechRecognitionProperties: { interimResults: true },\r\n    useLegacyResults: false\r\n  });\r\n\r\n  return (\r\n    <View style={styles.root}>\r\n      <br/>\r\n      <Text style={styles.title}>Today's Schedule</Text>\r\n      <br/><br/><br/>\r\n      \r\n      <div style={{display: \"inline\", width: \"100%\"}}>\r\n        <Text style={styles.text}>Action Item 1</Text>\r\n        <input placeholder=\"Keyword\" style={{height: 35, marginLeft: 18, fontSize: 18, width: 175, marginTop: 24}}></input>\r\n        <img width=\"100\" height=\"90\" style={{}} src={Audio1} onClick={isRecording ? stopSpeechToText : startSpeechToText}/>\r\n        <ul style={{color: \"white\", listStyle: \"none\", fontFamily: \"sans-serif\", fontWeight: \"bold\", fontSize: \"18px\"}}>\r\n          {(results).map((result) => (\r\n            <li key={result.timestamp}>{result.transcript}</li>\r\n          ))}\r\n          {interimResult && <li>{interimResult}</li>}\r\n      </ul>\r\n      </div>\r\n\r\n      <br/><br/>\r\n      <div>\r\n        <img width=\"95\" height=\"90\" src={Minus}/>\r\n        <Text>       </Text>\r\n        <img width=\"95\" height=\"90\" src={Plus} onClick={handlePlus}/>\r\n      </div>\r\n\r\n      <br/>\r\n      <CustomButton text={\"Save\"} onPress={handleBack} type=\"EXTRATWO\"/>\r\n      <br/>\r\n      <CustomButton text={\"Go Back\"} onPress={handleBack} type=\"SECONDARY\"/>\r\n      <br/><br/><br/><br/>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  root: {\r\n    alignItems: 'center',\r\n    padding: 20,\r\n    backgroundColor: '#364d59',\r\n    height: \"max\",\r\n  },\r\n  title: {\r\n    fontSize: 36,\r\n    fontWeight: 'bold',\r\n    color: 'white',\r\n  },\r\n  text: {\r\n    fontSize: 20,\r\n    color: 'white',\r\n  },\r\n  text2: {\r\n    marginTop: \"10px\",\r\n    fontSize: 20,\r\n    color: 'white',\r\n    fontWeight: 'bold',\r\n  },\r\n});\r\n\r\nexport default TodayScheduleScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module"}