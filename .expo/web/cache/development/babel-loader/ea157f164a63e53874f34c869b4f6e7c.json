{"ast":null,"code":"import React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport CustomInput from \"../../components/CustomInput/CustomInput\";\nimport CustomButton from \"../../components/CustomButton/CustomButton\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useForm } from 'react-hook-form';\nimport { auth } from \"../../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar SignUpScreen = function SignUpScreen() {\n  var _useForm = useForm(),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      watch = _useForm.watch;\n\n  var pwd = watch('password');\n  var confPwd = watch('repeatPassword');\n  var navigation = useNavigation();\n  var em = watch('email');\n\n  var handleSignUp = function handleSignUp() {\n    if (pwd !== confPwd) {\n      alert(\"Passwords do not match\");\n    } else {\n      auth.createUserWithEmailAndPassword(em, pwd).then(function (userCredentials) {\n        var user = userCredentials.user;\n        console.log(user.em);\n      }).catch(function (error) {\n        if (error.message === \"Firebase: This operation is restricted to administrators only. (auth/admin-restricted-operation).\") {\n          alert(\"All information must be filled in.\");\n        } else if (error.message === \"Firebase: An internal AuthError has occurred. (auth/internal-error).\") {\n          alert(\"Password must be filled out.\");\n        } else if (error.message === \"Firebase: Password should be at least 6 characters (auth/weak-password).\") {\n          alert(\"Password must be at least 6 characters long.\");\n        } else if (error.message === \"Firebase: The email address is already in use by another account. (auth/email-already-in-use).\") {\n          alert(\"The email address you enterred is already in use\");\n        } else if (error.message === \"Firebase: The email address is badly formatted. (auth/invalid-email).\") {\n          alert(\"Email address is not formatted correctly.\");\n        } else {\n          alert(\"Unknown Error\");\n        }\n      });\n    }\n  };\n\n  var onSignInPressed = function onSignInPressed() {\n    navigation.navigate('SignIn');\n  };\n\n  return _jsxs(View, {\n    style: styles.root,\n    children: [_jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(Text, {\n      style: styles.title,\n      children: \"Create Account\"\n    }), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(CustomInput, {\n      name: \"email\",\n      placeholder: \"Email\",\n      control: control,\n      rules: {\n        required: 'Email is required'\n      }\n    }), _jsx(CustomInput, {\n      name: \"password\",\n      placeholder: \"Password\",\n      control: control,\n      secureTextEntry: true,\n      rules: {\n        required: 'Password is required',\n        minLength: {\n          value: 8,\n          message: 'Password should be a minimum of 8 characters long'\n        },\n        maxLength: {\n          value: 24,\n          message: 'Password should be a maximum of 24 characters long'\n        }\n      }\n    }), _jsx(CustomInput, {\n      name: \"repeatPassword\",\n      placeholder: \"Repeat Password\",\n      control: control,\n      secureTextEntry: true,\n      rules: {\n        required: 'Password must be repeated',\n        validate: function validate(value) {\n          return value == pwd || 'Password does not match';\n        }\n      }\n    }), _jsx(CustomButton, {\n      text: \"Register\",\n      onPress: handleSignUp\n    }), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(CustomButton, {\n      text: \"Have an account? Sign in\",\n      onPress: onSignInPressed,\n      type: \"TERTIARY\"\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#364d59',\n    height: \"100%\"\n  },\n  logo: {\n    width: '70%',\n    maxWidth: 300,\n    height: 100\n  },\n  title: {\n    fontSize: 36,\n    fontWeight: 'bold',\n    color: 'white'\n  }\n});\nexport default SignUpScreen;","map":{"version":3,"names":["React","useState","CustomInput","CustomButton","useNavigation","useForm","auth","SignUpScreen","control","handleSubmit","watch","pwd","confPwd","navigation","em","handleSignUp","alert","createUserWithEmailAndPassword","then","userCredentials","user","console","log","catch","error","message","onSignInPressed","navigate","styles","root","title","required","minLength","value","maxLength","validate","StyleSheet","create","alignItems","padding","backgroundColor","height","logo","width","maxWidth","fontSize","fontWeight","color"],"sources":["/Users/sandeepjain/Routine-Remind/screens/SignUpScreen/SignUpScreen.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\r\nimport CustomInput from '../../components/CustomInput/CustomInput';\r\nimport CustomButton from '../../components/CustomButton/CustomButton';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useForm } from 'react-hook-form';\r\nimport { auth } from '../../firebase';\r\n\r\nconst SignUpScreen = () => {\r\n\r\n  const {control, handleSubmit, watch} = useForm();\r\n  const pwd = watch('password');\r\n  const confPwd = watch('repeatPassword')\r\n  const navigation = useNavigation();\r\n  const em = watch('email');\r\n\r\n  const handleSignUp = () => {\r\n    if (pwd !== confPwd) {\r\n      alert(\"Passwords do not match\");\r\n    } else {\r\n      auth\r\n      .createUserWithEmailAndPassword(em, pwd)\r\n      .then(userCredentials => {\r\n        const user = userCredentials.user;\r\n        console.log(user.em);\r\n      })\r\n      .catch(error => {\r\n        if (error.message === \"Firebase: This operation is restricted to administrators only. (auth/admin-restricted-operation).\") {\r\n          alert(\"All information must be filled in.\");\r\n        } else if (error.message === \"Firebase: An internal AuthError has occurred. (auth/internal-error).\") {\r\n          alert(\"Password must be filled out.\");\r\n        } else if (error.message === \"Firebase: Password should be at least 6 characters (auth/weak-password).\") {\r\n          alert(\"Password must be at least 6 characters long.\");\r\n        } else if (error.message === \"Firebase: The email address is already in use by another account. (auth/email-already-in-use).\") {\r\n          alert(\"The email address you enterred is already in use\")\r\n        } else if (error.message === \"Firebase: The email address is badly formatted. (auth/invalid-email).\") {\r\n          alert(\"Email address is not formatted correctly.\");\r\n        } else {\r\n          alert(\"Unknown Error\")\r\n        }\r\n      })\r\n    }\r\n  }\r\n\r\n  const onSignInPressed = () => {\r\n    navigation.navigate('SignIn');\r\n  }\r\n\r\n  return (\r\n      <View style = {styles.root}>\r\n        <br/><br/><br/>\r\n        <Text style={styles.title}>Create Account</Text>     \r\n        <br/><br/><br/>\r\n\r\n        <CustomInput\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          control={control}\r\n          rules={{required: 'Email is required'}}\r\n        />\r\n\r\n        <CustomInput\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          control={control}\r\n          secureTextEntry\r\n          rules={{required: 'Password is required', minLength: {value: 8, message: 'Password should be a minimum of 8 characters long'}, maxLength: {value: 24, message: 'Password should be a maximum of 24 characters long'}}}\r\n        />\r\n\r\n        <CustomInput\r\n          name=\"repeatPassword\"\r\n          placeholder=\"Repeat Password\"\r\n          control={control}\r\n          secureTextEntry\r\n          rules={{\r\n            required: 'Password must be repeated',\r\n            validate: value => value == pwd || 'Password does not match',\r\n          }}\r\n        />\r\n\r\n        <CustomButton text=\"Register\" onPress={handleSignUp} />\r\n        <br/><br/><br/><br/>\r\n\r\n        <CustomButton text=\"Have an account? Sign in\" onPress={onSignInPressed} type=\"TERTIARY\" />\r\n\r\n      </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    root: {\r\n      alignItems: 'center',\r\n      padding: 20,\r\n      backgroundColor: '#364d59',\r\n      height: \"100%\",\r\n    },\r\n    logo: {\r\n        width: '70%',\r\n        maxWidth: 300,\r\n        height: 100,\r\n    },\r\n    title: {\r\n      fontSize: 36,\r\n      fontWeight: 'bold',\r\n      color: 'white',\r\n    },\r\n});\r\n\r\nexport default SignUpScreen;"],"mappings":"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"},"metadata":{},"sourceType":"module"}