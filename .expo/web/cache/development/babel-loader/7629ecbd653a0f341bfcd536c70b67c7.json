{"ast":null,"code":"import React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport CustomInput from \"../../components/CustomInput/CustomInput\";\nimport CustomButton from \"../../components/CustomButton/CustomButton\";\nimport SocialSignInButtons from \"../../components/SocialSignInButtons/SocialSignInButtons\";\nimport { useNavigation } from '@react-navigation/native';\nimport { useForm } from 'react-hook-form';\nimport { auth } from \"../../firebase\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ForgotPasswordScreen = function ForgotPasswordScreen() {\n  var _useForm = useForm(),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      watch = _useForm.watch;\n\n  var navigation = useNavigation();\n  var em = watch('email');\n\n  var handleForgotPassword = function handleForgotPassword() {\n    auth.sendPasswordResetEmail(em).then(navigation.navigate('SignIn')).then(alert(\"Please check your email to reset your password. If you do not see an email, check your spam folder. Otherwise, type in your email again in the field below.\"));\n  };\n\n  var onSendPressed = function onSendPressed(data) {\n    console.warn(data);\n    navigation.navigate('NewPassword');\n  };\n\n  var onSignInPressed = function onSignInPressed() {\n    navigation.navigate('SignIn');\n  };\n\n  return _jsxs(View, {\n    style: styles.root,\n    children: [_jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(Text, {\n      style: styles.title,\n      children: \"Reset Password\"\n    }), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(CustomInput, {\n      name: \"email\",\n      control: control,\n      placeholder: \"Email\",\n      rules: {\n        required: 'Email is required'\n      }\n    }), _jsx(CustomButton, {\n      text: \"Send\",\n      onPress: handleForgotPassword\n    }), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(\"br\", {}), _jsx(CustomButton, {\n      text: \"Back to Sign in\",\n      onPress: onSignInPressed,\n      type: \"TERTIARY\"\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  root: {\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#364d59',\n    height: '100%'\n  },\n  title: {\n    fontSize: 36,\n    fontWeight: 'bold',\n    color: 'white'\n  },\n  text: {}\n});\nexport default ForgotPasswordScreen;","map":{"version":3,"names":["React","useState","CustomInput","CustomButton","SocialSignInButtons","useNavigation","useForm","auth","ForgotPasswordScreen","control","handleSubmit","watch","navigation","em","handleForgotPassword","sendPasswordResetEmail","then","navigate","alert","onSendPressed","data","console","warn","onSignInPressed","styles","root","title","required","StyleSheet","create","alignItems","padding","backgroundColor","height","fontSize","fontWeight","color","text"],"sources":["/Users/sandeepjain/Routine-Remind/screens/ForgotPasswordScreen/ForgotPasswordScreen.js"],"sourcesContent":["import React, {useState} from 'react';\r\nimport { View, Text, StyleSheet, ScrollView } from 'react-native';\r\nimport CustomInput from '../../components/CustomInput/CustomInput';\r\nimport CustomButton from '../../components/CustomButton/CustomButton';\r\nimport SocialSignInButtons from '../../components/SocialSignInButtons/SocialSignInButtons';\r\nimport { useNavigation } from '@react-navigation/native';\r\nimport { useForm } from 'react-hook-form';\r\nimport { auth } from '../../firebase';\r\n\r\nconst ForgotPasswordScreen = () => {\r\n  const {control, handleSubmit, watch} = useForm();\r\n  const navigation = useNavigation();\r\n  const em = watch('email');\r\n\r\n  const handleForgotPassword = () => {\r\n    auth\r\n      .sendPasswordResetEmail(em)\r\n      .then(\r\n        navigation.navigate('SignIn')\r\n      )\r\n      .then(\r\n        alert(\"Please check your email to reset your password. If you do not see an email, check your spam folder. Otherwise, type in your email again in the field below.\")\r\n      )\r\n  }\r\n\r\n  const onSendPressed = data => {\r\n    console.warn(data);\r\n    navigation.navigate('NewPassword');\r\n  }\r\n\r\n  const onSignInPressed = () => {\r\n    navigation.navigate('SignIn');\r\n  }\r\n\r\n  return (\r\n      <View style = {styles.root}>\r\n        <br/><br/><br/>\r\n        <Text style={styles.title}>Reset Password</Text>     \r\n        <br/><br/><br/>\r\n\r\n        <CustomInput\r\n          name=\"email\"\r\n          control={control}\r\n          placeholder=\"Email\"\r\n          rules={{required: 'Email is required'}}\r\n        />\r\n\r\n        <CustomButton text=\"Send\" onPress={handleForgotPassword} />\r\n        <br/><br/><br/><br/><br/><br/><br/><br/><br/><br/>\r\n        <CustomButton text=\"Back to Sign in\" onPress={onSignInPressed} type=\"TERTIARY\" />\r\n        \r\n\r\n      </View>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    root: {\r\n      alignItems: 'center',\r\n      padding: 20,\r\n      backgroundColor: '#364d59',\r\n      height: '100%',\r\n    },\r\n    title: {\r\n      fontSize: 36,\r\n      fontWeight: 'bold',\r\n      color: 'white',\r\n    },\r\n    text: {},\r\n});\r\n\r\nexport default ForgotPasswordScreen;"],"mappings":"AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;;;;AAEA,OAAOC,WAAP;AACA,OAAOC,YAAP;AACA,OAAOC,mBAAP;AACA,SAASC,aAAT,QAA8B,0BAA9B;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,IAAT;;;;AAEA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;EACjC,eAAuCF,OAAO,EAA9C;EAAA,IAAOG,OAAP,YAAOA,OAAP;EAAA,IAAgBC,YAAhB,YAAgBA,YAAhB;EAAA,IAA8BC,KAA9B,YAA8BA,KAA9B;;EACA,IAAMC,UAAU,GAAGP,aAAa,EAAhC;EACA,IAAMQ,EAAE,GAAGF,KAAK,CAAC,OAAD,CAAhB;;EAEA,IAAMG,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;IACjCP,IAAI,CACDQ,sBADH,CAC0BF,EAD1B,EAEGG,IAFH,CAGIJ,UAAU,CAACK,QAAX,CAAoB,QAApB,CAHJ,EAKGD,IALH,CAMIE,KAAK,CAAC,6JAAD,CANT;EAQD,CATD;;EAWA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,IAAI,EAAI;IAC5BC,OAAO,CAACC,IAAR,CAAaF,IAAb;IACAR,UAAU,CAACK,QAAX,CAAoB,aAApB;EACD,CAHD;;EAKA,IAAMM,eAAe,GAAG,SAAlBA,eAAkB,GAAM;IAC5BX,UAAU,CAACK,QAAX,CAAoB,QAApB;EACD,CAFD;;EAIA,OACI,MAAC,IAAD;IAAM,KAAK,EAAIO,MAAM,CAACC,IAAtB;IAAA,WACE,cADF,EACO,cADP,EACY,cADZ,EAEE,KAAC,IAAD;MAAM,KAAK,EAAED,MAAM,CAACE,KAApB;MAAA;IAAA,EAFF,EAGE,cAHF,EAGO,cAHP,EAGY,cAHZ,EAKE,KAAC,WAAD;MACE,IAAI,EAAC,OADP;MAEE,OAAO,EAAEjB,OAFX;MAGE,WAAW,EAAC,OAHd;MAIE,KAAK,EAAE;QAACkB,QAAQ,EAAE;MAAX;IAJT,EALF,EAYE,KAAC,YAAD;MAAc,IAAI,EAAC,MAAnB;MAA0B,OAAO,EAAEb;IAAnC,EAZF,EAaE,cAbF,EAaO,cAbP,EAaY,cAbZ,EAaiB,cAbjB,EAasB,cAbtB,EAa2B,cAb3B,EAagC,cAbhC,EAaqC,cAbrC,EAa0C,cAb1C,EAa+C,cAb/C,EAcE,KAAC,YAAD;MAAc,IAAI,EAAC,iBAAnB;MAAqC,OAAO,EAAES,eAA9C;MAA+D,IAAI,EAAC;IAApE,EAdF;EAAA,EADJ;AAoBD,CA7CD;;AA+CA,IAAMC,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;EAC7BJ,IAAI,EAAE;IACJK,UAAU,EAAE,QADR;IAEJC,OAAO,EAAE,EAFL;IAGJC,eAAe,EAAE,SAHb;IAIJC,MAAM,EAAE;EAJJ,CADuB;EAO7BP,KAAK,EAAE;IACLQ,QAAQ,EAAE,EADL;IAELC,UAAU,EAAE,MAFP;IAGLC,KAAK,EAAE;EAHF,CAPsB;EAY7BC,IAAI,EAAE;AAZuB,CAAlB,CAAf;AAeA,eAAe7B,oBAAf"},"metadata":{},"sourceType":"module"}